// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_5_Web_Api_Portfolio_Project.Data;

namespace dotnet_5_Web_Api_Portfolio_Project.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220228132056_ItemDescription")]
    partial class ItemDescription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<int>("CartsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("CartsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("dotnet_5_Web_Api_Portfolio_Project.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsMainCart")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("dotnet_5_Web_Api_Portfolio_Project.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Ratting")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("dotnet_5_Web_Api_Portfolio_Project.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AmountInWarehouse")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<byte>("Ratting")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountInWarehouse = 100,
                            Barcode = "1",
                            Description = "A car",
                            Name = "Car",
                            Price = 10000f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 2,
                            AmountInWarehouse = 56,
                            Barcode = "2",
                            Description = "A carrot",
                            Name = "Carrot",
                            Price = 1f,
                            Ratting = (byte)3
                        },
                        new
                        {
                            Id = 3,
                            AmountInWarehouse = 47,
                            Barcode = "3",
                            Description = "A plant",
                            Name = "Plant",
                            Price = 1f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 4,
                            AmountInWarehouse = 5,
                            Barcode = "4",
                            Description = "Boots",
                            Name = "Boots",
                            Price = 60f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 5,
                            AmountInWarehouse = 13,
                            Barcode = "5",
                            Description = "A shovel",
                            Name = "Shovel",
                            Price = 15f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 6,
                            AmountInWarehouse = 17,
                            Barcode = "6",
                            Description = "A chainsaw",
                            Name = "Chainsaw",
                            Price = 300f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 7,
                            AmountInWarehouse = 26,
                            Barcode = "7",
                            Description = "A black bag",
                            Name = "Black bag",
                            Price = 3.6f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 8,
                            AmountInWarehouse = 59,
                            Barcode = "8",
                            Description = "A bleach",
                            Name = "Bleach",
                            Price = 2.8f,
                            Ratting = (byte)6
                        },
                        new
                        {
                            Id = 9,
                            AmountInWarehouse = 1234,
                            Barcode = "9",
                            Description = "A poster",
                            Name = "Poster",
                            Price = 27f,
                            Ratting = (byte)6
                        });
                });

            modelBuilder.Entity("dotnet_5_Web_Api_Portfolio_Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGolden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubcribed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.HasOne("dotnet_5_Web_Api_Portfolio_Project.Models.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_5_Web_Api_Portfolio_Project.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_5_Web_Api_Portfolio_Project.Models.Cart", b =>
                {
                    b.HasOne("dotnet_5_Web_Api_Portfolio_Project.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
